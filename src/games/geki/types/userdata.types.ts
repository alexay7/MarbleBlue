import {Types} from "mongoose";
import type {GekiUserGameOptionType} from "./usergameoption.types.ts";
import type {GekiUserActivityType} from "./useractivity.types.ts";
import type {GekiUserCharacterType} from "./usercharacter.types.ts";
import type {GekiUserCardType} from "./usercard.types.ts";
import type {GekiUserDeckType} from "./userdeck.types.ts";
import type {GekiUserChapterType, GekiUserMemoryChapterType} from "./userchapter.types.ts";
import type {GekiUserItemType, GekiUserMusicItemType} from "./useritem.types.ts";
import type {GekiUserMusicDetailType} from "./usermusicdetail.types.ts";
import type {GekiUserLoginBonusType} from "./userloginbonus.types.ts";
import type {GekiUserPlaylogType} from "./userplaylog.types.ts";
import type {GekiUserMissionPointType} from "./usermissionpoint.types.ts";
import type {GekiUserEventPointType} from "./usereventpoint.types.ts";
import type {GekiUserRatingType} from "./usermisc.types.ts";
import type {GekiUserStoryType} from "./userstory.types.ts";
import type {GekiUserTrainingRoomType} from "./usertrainingroom.types.ts";
import type {GekiUserBossType} from "./userboss.types.ts";
import type {GekiUserTechCountType} from "./usertechcount.types.ts";
import type {GekiUserScenarioType} from "./userscenario.types.ts";
import type {GekiUserTradeItemType} from "./usertradeitem.types.ts";
import type {GekiUserEventMusicType} from "./usereventmusic.types.ts";
import type {GekiUserTechEventType} from "./usertechevent.types.ts";
import type {GekiUserKopType} from "./userkop.types.ts";
import type {GekiUserEventMapType} from "./usereventmap.types.ts";
import type {GekiUserRatingLogType} from "./userratinglog.types.ts";

export type GekiUserDataType = {
    _id:Types.ObjectId;

    userId:string;
    version:number;

    accessCode:string;
    userName:string;
    level:number;
    reincarnationNum:number;
    exp:bigint;
    point:bigint;
    totalPoint:bigint;
    playCount:number;
    jewelCount:number;
    totalJewelCount:number;
    medalCount:number;
    shizukuCount:number;
    playerRating:number;
    highestRating:number;
    newPlayerRating:number;
    newHighestRating:number;
    battlePoint:number;
    bestBattlePoint:number;
    overDamageBattlePoint:number;
    isDialogWatchedSuggestMemory:boolean;
    nameplateId:number;
    trophyId:number;
    cardId:number;
    characterId:number;
    characterVoiceNo:number;
    tabSetting:number;
    tabSortSetting:number;
    cardCategorySetting:number;
    cardSortSetting:number;
    rivalScoreCategorySetting:number;
    playedTutorialBit:number;
    firstTutorialCancelNum:number;
    sumTechHighScore:bigint;
    sumTechBasicHighScore:bigint;
    sumTechAdvancedHighScore:bigint;
    sumTechExpertHighScore:bigint;
    sumTechMasterHighScore:bigint;
    sumTechLunaticHighScore:bigint;
    sumBattleHighScore:bigint;
    sumBattleBasicHighScore:bigint;
    sumBattleAdvancedHighScore:bigint;
    sumBattleExpertHighScore:bigint;
    sumBattleMasterHighScore:bigint;
    sumBattleLunaticHighScore:bigint;
    sumPlatinumScoreStar:number;
    sumBasicPlatinumScoreStar:number;
    sumAdvancedPlatinumScoreStar:number;
    sumExpertPlatinumScoreStar:number;
    sumMasterPlatinumScoreStar:number;
    sumLunaticPlatinumScoreStar:number;
    eventWatchedDate:Date;
    cmEventWatchedDate:Date;
    firstGameId:string;
    firstRomVersion:string;
    firstDataVersion:string;
    firstPlayDate:Date;
    lastGameId:string;
    lastRomVersion:string;
    lastDataVersion:string;
    lastPlayDate:Date;
    lastPlaceId:number;
    lastPlaceName:string;
    lastRegionId:number;
    lastRegionName:string;
    lastAllNetId:number;
    lastClientId:string;
    compatibleCmVersion:string;
    lastUsedDeckId:number;
    lastPlayMusicLevel:number;
    lastEmoneyBrand:number;
}

export type GekiUpsertUserAllRequest = {
    userData:GekiUserDataType[];
    userOption:GekiUserGameOptionType[];
    userPlaylogList:GekiUserPlaylogType[];
    userActivityList:GekiUserActivityType[];
    userRecentRatingList:GekiUserRatingType[];
    userBpBaseList:GekiUserRatingType[];
    userRatingBaseBestNewList:GekiUserRatingType[];
    userRatingBaseBestList:GekiUserRatingType[];
    userRatingBaseHotList:GekiUserRatingType[];
    userRatingBaseNextNewList:GekiUserRatingType[];
    userRatingBaseNextList:GekiUserRatingType[];
    userRatingBaseHotNextList:GekiUserRatingType[];
    userNewRatingBasePScoreList:GekiUserRatingType[];
    userNewRatingBaseBestList:GekiUserRatingType[];
    userNewRatingBaseBestNewList:GekiUserRatingType[];
    userNewRatingBaseNextPScoreList:GekiUserRatingType[];
    userNewRatingBaseNextBestList:GekiUserRatingType[];
    userNewRatingBaseNextBestNewList:GekiUserRatingType[];
    userMusicDetailList:GekiUserMusicDetailType[];
    userCharacterList:GekiUserCharacterType[];
    userCardList:GekiUserCardType[];
    userDeckList:GekiUserDeckType[];
    userTrainingRoomList:GekiUserTrainingRoomType[];
    userStoryList:GekiUserStoryType[];
    userChapterList:GekiUserChapterType[];
    userMemoryChapterList:GekiUserMemoryChapterType[];
    userItemList:GekiUserItemType[];
    userMusicItemList:GekiUserMusicItemType[];
    userLoginBonusList:GekiUserLoginBonusType[];
    userEventPointList:GekiUserEventPointType[];
    userMissionPointList:GekiUserMissionPointType[];
    userBossList:GekiUserBossType[];
    userTechCountList:GekiUserTechCountType[];
    userScenarioList:GekiUserScenarioType[];
    userTradeItemList:GekiUserTradeItemType[];
    userEventMusicList:GekiUserEventMusicType[];
    userTechEventList:GekiUserTechEventType[];
    userKopList:GekiUserKopType[];
    userEventMap:GekiUserEventMapType[];
    userRatinglogList:GekiUserRatingLogType[];

    // Irrelevant
    userJewelboostlogList:never[];
    userSessionlogList:never[];
}