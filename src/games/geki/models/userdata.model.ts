import mongoose, {Schema, SchemaTypes} from "mongoose";
import type {GekiUserDataType} from "../types/userdata.types.ts";

const gekiUserDataSchema = new Schema<GekiUserDataType>({
	_id: { type: SchemaTypes.ObjectId, auto: true },

	userId: { type: String, ref: "Card", required: true },
	version: { type: Number, required: true },

	accessCode: { type: String},
	userName: { type: String},
	level: { type: Number},
	reincarnationNum: { type: Number},
	exp: { type: SchemaTypes.BigInt},
	point: { type: SchemaTypes.BigInt},
	totalPoint: { type: SchemaTypes.BigInt},
	playCount: { type: Number},
	jewelCount: { type: Number},
	totalJewelCount: { type: Number},
	medalCount: { type: Number},
	shizukuCount: { type: Number},
	playerRating: { type: Number},
	highestRating: { type: Number},
	newPlayerRating: { type: Number},
	newHighestRating: { type: Number},
	battlePoint: { type: Number},
	bestBattlePoint: { type: Number},
	overDamageBattlePoint: { type: Number},
	isDialogWatchedSuggestMemory: { type: Boolean},
	nameplateId: { type: Number},
	trophyId: { type: Number},
	cardId: { type: Number},
	characterId: { type: Number},
	characterVoiceNo: { type: Number},
	tabSetting: { type: Number},
	tabSortSetting: { type: Number},
	cardCategorySetting: { type: Number},
	cardSortSetting: { type: Number},
	rivalScoreCategorySetting: { type: Number},
	playedTutorialBit: { type: Number},
	firstTutorialCancelNum: { type: Number},
	sumTechHighScore: { type: SchemaTypes.BigInt},
	sumTechBasicHighScore: { type: SchemaTypes.BigInt},
	sumTechAdvancedHighScore: { type: SchemaTypes.BigInt},
	sumTechExpertHighScore: { type: SchemaTypes.BigInt},
	sumTechMasterHighScore: { type: SchemaTypes.BigInt},
	sumTechLunaticHighScore: { type: SchemaTypes.BigInt},
	sumBattleHighScore: { type: SchemaTypes.BigInt},
	sumBattleBasicHighScore: { type: SchemaTypes.BigInt},
	sumBattleAdvancedHighScore: { type: SchemaTypes.BigInt},
	sumBattleExpertHighScore: { type: SchemaTypes.BigInt},
	sumBattleMasterHighScore: { type: SchemaTypes.BigInt},
	sumBattleLunaticHighScore: { type: SchemaTypes.BigInt},
	sumPlatinumScoreStar: { type: Number},
	sumBasicPlatinumScoreStar: { type: Number},
	sumAdvancedPlatinumScoreStar: { type: Number},
	sumExpertPlatinumScoreStar: { type: Number},
	sumMasterPlatinumScoreStar: { type: Number},
	sumLunaticPlatinumScoreStar: { type: Number},
	eventWatchedDate: { type: Date},
	cmEventWatchedDate: { type: Date},
	lastPlayDate: { type: Date},
	firstPlayDate: { type: Date},
	firstGameId: { type: String},
	firstRomVersion: { type: String},
	firstDataVersion: { type: String},
	lastGameId: { type: String},
	lastRomVersion: { type: String},
	lastDataVersion: { type: String},
	lastPlaceId: { type: Number},
	lastPlaceName: { type: String},
	lastRegionId: { type: Number},
	lastRegionName: { type: String},
	lastAllNetId: { type: Number},
	lastClientId: { type: String},
	compatibleCmVersion: { type: String},
	lastUsedDeckId: { type: Number},
	lastPlayMusicLevel: { type: Number},
	lastEmoneyBrand: { type: Number},
});

gekiUserDataSchema.index({userId: 1, version: 1}, {unique: true});

export const GekiUserData = mongoose.model("GekiUserData", gekiUserDataSchema);