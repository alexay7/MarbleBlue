import mongoose, { Schema, SchemaTypes } from "mongoose";
import type {Chu3UserDataType} from "../types/userdata.types.ts";

const chu3UserDataSchema = new Schema<Chu3UserDataType>({
	_id: { type: SchemaTypes.ObjectId, auto: true },

	cardId: { type: String, ref: "Card", required: true },
	version: { type: Number, required: true },

	accessCode: { type: String},
	userName: { type: String},
	level: { type: Number},
	reincarnationNum: { type: Number},
	exp: { type: Number},
	point: { type: SchemaTypes.BigInt},
	totalPoint: { type: SchemaTypes.BigInt},
	playCount: { type: Number},
	multiPlayCount: { type: Number},
	playerRating: { type: Number},
	highestRating: { type: Number},
	nameplateId: { type: Number},
	frameId: { type: Number},
	characterId: { type: Number},
	trophyId: { type: Number},
	trophyIdSub1: { type: Number},
	trophyIdSub2: { type: Number},
	playedTutorialBit: { type: Number},
	firstTutorialCancelNum: { type: Number},
	masterTutorialCancelNum: { type: Number},
	totalMapNum: { type: Number},
	totalHiScore: { type: SchemaTypes.BigInt},
	totalBasicHighScore: { type: SchemaTypes.BigInt},
	totalAdvancedHighScore: { type: SchemaTypes.BigInt},
	totalExpertHighScore: { type: SchemaTypes.BigInt},
	totalMasterHighScore: { type: SchemaTypes.BigInt},
	totalUltimaHighScore:{ type: SchemaTypes.BigInt},
	eventWatchedDate:{ type:Date},
	friendCount:{ type:Number},
	firstGameId:{ type:String},
	firstRomVersion:{ type:String},
	firstDataVersion:{ type:String},
	firstPlayDate:{ type:Date},
	lastGameId:{ type:String},
	lastRomVersion:{ type:String},
	lastDataVersion:{ type:String},
	lastPlayDate:{ type:Date},
	lastPlaceId:{ type:Number},
	lastPlaceName:{ type:String},
	lastRegionId:{ type:Number},
	lastRegionName:{ type:String},
	lastAllNetId:{ type:Number},
	lastClientId:{ type:String},
	lastCountryCode:{ type:String},
	userNameEx:{ type:String},
	compatibleCmVersion:{ type:String},
	medal:{ type:Number},
	exMapLoopCount:{ type:Number},
	ext1:{ type:Number},
	ext2:{ type:Number},
	ext3:{ type:Number},
	ext4:{ type:Number},
	ext5:{ type:Number},
	ext6:{ type:Number},
	ext7:{ type:Number},
	ext8:{ type:Number},
	ext9:{ type:Number},
	ext10:{ type:Number},
	extStr1:{ type:String},
	extStr2:{ type:String},
	extLong1:{ type: SchemaTypes.BigInt},
	extLong2:{ type: SchemaTypes.BigInt},
	mapIconId:{ type:Number},
	voiceId:{ type:Number},
	avatarWear:{ type:Number},
	avatarHead:{ type:Number},
	avatarFace:{ type:Number},
	avatarSkin:{ type:Number},
	avatarItem:{ type:Number},
	avatarFront:{ type:Number},
	avatarBack:{ type:Number},
	classEmblemBase:{ type:Number},
	classEmblemMedal:{ type:Number},
	stockedGridCount:{ type:Number},
	netBattlePlayCount:{ type:Number},
	netBattleWinCount:{ type:Number},
	netBattleLoseCount:{ type:Number},
	netBattleConsecutiveWinCount:{ type:Number},
	avatarPoint:{ type:Number},
	battleRankId:{ type:Number},
	battleRankPoint:{ type:Number},
	eliteRankPoint:{ type:Number},
	netBattle1stCount:{ type:Number},
	netBattle2ndCount:{ type:Number},
	netBattle3rdCount:{ type:Number},
	netBattle4thCount:{ type:Number},
	netBattleCorrection:{ type:Number},
	netBattleErrCnt:{ type:Number},
	netBattleHostErrCnt:{ type:Number},
	battleRewardStatus:{ type:Number},
	battleRewardIndex:{ type:Number},
	battleRewardCount:{ type:Number},
	isNetBattleHost:{ type:Boolean},
	netBattleEndState:{ type:Number},
	charaIllustId:{ type:Number},
	skillId:{ type:Number},
	stageId:{ type:Number},
	overPowerPoint:{ type:Number},
	overPowerRate:{ type:Number},
	overPowerLowerRank:{ type:Number},
});

chu3UserDataSchema.index({ cardId: 1, version:1 }, { unique: true });

export const Chu3UserData = mongoose.model("Chu3UserData", chu3UserDataSchema);